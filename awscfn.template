{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Outputs": {
        "ALBURL": {
            "Description": "URL of the ALB",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "ALB",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        }
    },
    "Parameters": {
        "ECSClusterName": {
            "Default": "FargateCluster",
            "Description": "ECS Fargate cluster name",
            "Type": "String"
        },
        "ServiceDiscoveryNameSpaceName": {
            "Default": "demo",
            "Description": "PHP task domain e.g. php.demo. Must match nginx site.conf",
            "Type": "String"
        },
        "PhpServicDiscoveryServiceName": {
            "Default": "php",
            "Description": "PHP task hostname e.g. php.demo. Must match nginx site.conf",
            "Type": "String"
        },
        "NginxImage": {
            "Default": "nginx:1.14-alpine",
            "Description": "The nginx container image to run (e.g. nginx:1.14-alpine)",
            "Type": "String"
        },
        "PhpImage": {
            "Default": "php:7.2-fpm-alpine",
            "Description": "The php container image to run (e.g. php:7.2-fpm-alpine)",
            "Type": "String"
        },
        "VPCCIDR": {
            "Default": "10.0.0.0/16",
            "Description": "VPC CIDR",
            "Type": "String"
        },
        "PrivateSubnetAz1CIDR": {
            "Default": "10.0.0.0/24",
            "Description": "PrvSub1 CIDR",
            "Type": "String"
        },
        "PrivateSubnetAz2CIDR": {
            "Default": "10.0.1.0/24",
            "Description": "PrvSub2 CIDR",
            "Type": "String"
        },
        "PublicSubnetAz1CIDR": {
            "Default": "10.0.10.0/24",
            "Description": "PubSub1 CIDR",
            "Type": "String"
        },
        "PublicSubnetAz2CIDR": {
            "Default": "10.0.11.0/24",
            "Description": "PubSub2 CIDR",
            "Type": "String"
        }
    },
    "Resources": {
        "ServiceDiscoveryNameSpace": {
            "Type" : "AWS::ServiceDiscovery::PrivateDnsNamespace",
            "Properties" : {
                "Description" : "fargate namespace",
                "Vpc" : {
                    "Ref": "VPC"
                },
                "Name" : {
                    "Ref": "ServiceDiscoveryNameSpaceName"
                }
            }
        },
        "ServiceDiscoveryService": {
            "DependsOn": "ServiceDiscoveryNameSpace",
            "Type" : "AWS::ServiceDiscovery::Service",
            "Properties" : {
                "Description" : "fargate service name",
                "DnsConfig" : {
                    "DnsRecords" : [
                        {
                            "Type": "A",
                            "TTL": "300"
                        }
                    ],
                    "NamespaceId" : {
                        "Ref": "ServiceDiscoveryNameSpace"
                    }
                },
                "HealthCheckCustomConfig": {
                    "FailureThreshold" : "1"
                },
                "Name" : {
                    "Ref": "PhpServicDiscoveryServiceName"
                }
            }
        },
        "ALB": {
            "Properties": {
                "Scheme": "internet-facing",
                "SecurityGroups": [
                    {
                        "Ref": "ALBSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "PubSubnetAz1"
                    },
                    {
                        "Ref": "PubSubnetAz2"
                    }
                ]
            },
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer"
        },
        "ALBListener": {
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "ALBTargetGroup"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ALB"
                },
                "Port": "80",
                "Protocol": "HTTP"
            },
            "Type": "AWS::ElasticLoadBalancingV2::Listener"
        },
        "ALBSecurityGroup": {
            "Properties": {
                "GroupDescription": "ALB Security Group",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "ALBTargetGroup": {
            "Properties": {
                "HealthCheckIntervalSeconds": "30",
                "HealthCheckProtocol": "HTTP",
                "HealthCheckTimeoutSeconds": "10",
                "HealthyThresholdCount": "4",
                "Matcher": {
                    "HttpCode": "200"
                },
                "Port": 80,
                "Protocol": "HTTP",
                "TargetType": "ip",
                "UnhealthyThresholdCount": "3",
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
        },
        "CWLogGroup": {
            "Type": "AWS::Logs::LogGroup"
        },
        "ECSCluster": {
            "Properties": {
                "ClusterName": {
                    "Ref": "ECSClusterName"
                }
            },
            "Type": "AWS::ECS::Cluster"
        },
        "AttachGateway": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "ElasticIP": {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "VPC"
            }
        },
        "NatGateway": {
            "Type": "AWS::EC2::NatGateway",
            "Properties" : {
                "AllocationId" : {
                    "Fn::GetAtt" : [ "ElasticIP", "AllocationId" ]
                },
                "SubnetId" : {
                    "Ref": "PubSubnetAz1"
                }
            },
            "DependsOn": "ElasticIP"
        },
        "PrvSubnet1RouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteViaNat"
                },
                "SubnetId": {
                    "Ref": "PrvSubnetAz1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PrvSubnet2RouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteViaNat"
                },
                "SubnetId": {
                    "Ref": "PrvSubnetAz2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PrvSubnetAz1": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::Region"
                            },
                            "a"
                        ]
                    ]
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnetAz1CIDR"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrvSubnetAz2": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::Region"
                            },
                            "b"
                        ]
                    ]
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnetAz2CIDR"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PubSubnet1RouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteViaIgw"
                },
                "SubnetId": {
                    "Ref": "PubSubnetAz1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PubSubnet2RouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteViaIgw"
                },
                "SubnetId": {
                    "Ref": "PubSubnetAz2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PubSubnetAz1": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::Region"
                            },
                            "a"
                        ]
                    ]
                },
                "CidrBlock": {
                    "Ref": "PublicSubnetAz1CIDR"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PubSubnetAz2": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::Region"
                            },
                            "b"
                        ]
                    ]
                },
                "CidrBlock": {
                    "Ref": "PublicSubnetAz2CIDR"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PublicRouteViaIgw": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "RouteViaIgw"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "RouteViaIgw": {
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
       "PrivateRouteViaNat": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NatGateway"
                },
                "RouteTableId": {
                    "Ref": "RouteViaNat"
                }
            },
            "Type": "AWS::EC2::Route",
            "DependsOn": "NatGateway"
        },
        "RouteViaNat": {
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "VPC": {
            "Properties": {
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                }
            },
            "Type": "AWS::EC2::VPC"
        },
        "PhpService": {
            "DependsOn": "ServiceDiscoveryService",
            "Properties": {
                "Cluster": {
                    "Ref": "ECSCluster"
                },
                "DesiredCount": 1,
                "LaunchType": "FARGATE",
                "ServiceRegistries": [
                    {
                        "RegistryArn" : {
                            "Fn::GetAtt": [
                                "ServiceDiscoveryService",
                                "Arn"
                            ]
                        }
                    }
                ],
                "NetworkConfiguration": {
                    "AwsvpcConfiguration": {
                        "AssignPublicIp": "DISABLED",
                        "SecurityGroups": [
                            {
                                "Ref": "TaskSecurityGroup"
                            }
                        ],
                        "Subnets": [
                            {
                                "Ref": "PrvSubnetAz1"
                            },
                            {
                                "Ref": "PrvSubnetAz2"
                            }
                        ]
                    }
                },
                "TaskDefinition": {
                    "Ref": "PhpTaskDefinition"
                }
            },
            "Type": "AWS::ECS::Service"
        },
        "NginxService": {
            "DependsOn": [
                "ALB",
                "PhpService"
            ],
            "Properties": {
                "Cluster": {
                    "Ref": "ECSCluster"
                },
                "DesiredCount": 1,
                "LaunchType": "FARGATE",
                "LoadBalancers": [
                    {
                        "ContainerName": "nginx",
                        "ContainerPort": 80,
                        "TargetGroupArn": {
                            "Ref": "ALBTargetGroup"
                        }
                    }
                ],
                "NetworkConfiguration": {
                    "AwsvpcConfiguration": {
                        "AssignPublicIp": "DISABLED",
                        "SecurityGroups": [
                            {
                                "Ref": "TaskSecurityGroup"
                            }
                        ],
                        "Subnets": [
                            {
                                "Ref": "PrvSubnetAz1"
                            },
                            {
                                "Ref": "PrvSubnetAz2"
                            }
                        ]
                    }
                },
                "TaskDefinition": {
                    "Ref": "NginxTaskDefinition"
                }
            },
            "Type": "AWS::ECS::Service"
        },
        "PhpTaskDefinition": {
            "DependsOn": "TaskExecutionPolicy",
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Essential": "true",
                        "Image": {
                            "Ref": "PhpImage"
                        },
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-group": {
                                    "Ref": "CWLogGroup"
                                },
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                },
                                "awslogs-stream-prefix": "php"
                            }
                        },
                        "Name": "php"
                    }
                ],
                "Cpu": "512",
                "TaskRoleArn": {
                    "Fn::GetAtt": [
                        "TaskExecutionRole",
                        "Arn"
                    ]
                },
                "ExecutionRoleArn": {
                    "Fn::GetAtt": [
                        "TaskExecutionRole",
                        "Arn"
                    ]
                },
                "Memory": "1GB",
                "NetworkMode": "awsvpc",
                "RequiresCompatibilities": [
                    "FARGATE"
                ]
            },
            "Type": "AWS::ECS::TaskDefinition",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "19a0e893-9b6b-4ea6-8c0e-de148d4b3a85"
                }
            }
        },
        "NginxTaskDefinition": {
            "DependsOn": "TaskExecutionPolicy",
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Essential": "true",
                        "Image": {
                            "Ref": "NginxImage"
                        },
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-group": {
                                    "Ref": "CWLogGroup"
                                },
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                },
                                "awslogs-stream-prefix": "nginx"
                            }
                        },
                        "Name": "nginx",
                        "PortMappings": [
                            {
                                "ContainerPort": 80
                            }
                        ]
                    }
                ],
                "Cpu": "512",
                "TaskRoleArn": {
                    "Fn::GetAtt": [
                        "TaskExecutionRole",
                        "Arn"
                    ]
                },
                "ExecutionRoleArn": {
                    "Fn::GetAtt": [
                        "TaskExecutionRole",
                        "Arn"
                    ]
                },
                "Memory": "1GB",
                "NetworkMode": "awsvpc",
                "RequiresCompatibilities": [
                    "FARGATE"
                ]
            },
            "Type": "AWS::ECS::TaskDefinition"
        },
        "TaskExecutionPolicy": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "fargate-execution",
                "Roles": [
                    {
                        "Ref": "TaskExecutionRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "TaskExecutionRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs-tasks.amazonaws.com"
                                ]
                            }
                        }
                    ]
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "TaskSecurityGroup": {
            "Properties": {
                "GroupDescription": "Task Security Group",
                "SecurityGroupIngress": [
                    {
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                                "ALBSecurityGroup",
                                "GroupId"
                            ]
                        },
                        "ToPort": "80"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "TaskSecurityGroupIngress": {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "Properties" : {
                "Description" : "Allow all communication between fargate tasks",
                "FromPort" : "-1",
                "GroupId" : {
                    "Ref": "TaskSecurityGroup"
                },
                "IpProtocol" : "-1",
                "SourceSecurityGroupId" : {
                    "Ref": "TaskSecurityGroup"
                }
            }
        }
    }
}